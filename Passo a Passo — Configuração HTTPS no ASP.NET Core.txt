Passo a Passo ‚Äî Configura√ß√£o HTTPS no ASP.NET Core

1. Gerar e Instalar Certificado de Desenvolvimento (Se necess√°rio)

    . O ASP.NET Core usa um certificado de desenvolvimento local gerado automaticamente.

    . Execute no terminal:

        # Isso cria e adiciona o certificado HTTPS local ao armazenamento confi√°vel do sistema (Windows, macOS ou Linux).
        dotnet dev-certs https --trust

2. Configurar o arquivo launchSettings.json

    {
        "profiles": {
            "YourProjectName": {
            "commandName": "Project",
            "dotnetRunMessages": true,
            "launchBrowser": true,
            "applicationUrl": "https://localhost:5001;http://localhost:5000",
            "environmentVariables": {
                "ASPNETCORE_ENVIRONMENT": "Development"
            }
            }
        }
    }

    . Isso faz o app rodar tanto em HTTP (5000) quanto HTTPS (5001).

3. Configurar o Redirecionamento HTTPS no Program.cs

    var builder = WebApplication.CreateBuilder(args);

    // Configurar HTTPS Redirection Middleware
    //
    // O c√≥digo abaixo for√ßa qualquer acesso via HTTP (porta 5000) a ser redirecionado para HTTPS (porta 5001).
    builder.Services.AddHttpsRedirection(options =>
    {
        options.RedirectStatusCode = StatusCodes.Status308PermanentRedirect;
        options.HttpsPort = 5001;
    });

    var app = builder.Build();

    app.UseHttpsRedirection(); // üö® Esta linha deve estar antes de middlewares como UseRouting, UseAuthorization

    app.UseStaticFiles();

    app.UseRouting();

    app.UseAuthorization();

    app.MapControllers();

    app.Run();

4. Configurar portas e certificados no appsettings.json (Opcional, mas recomendado)

    {
        "Kestrel": {
            "Endpoints": {
            "Http": {
                "Url": "http://localhost:5000"
            },
            "Https": {
                "Url": "https://localhost:5001"
            }
            }
        }
    }

    . Essa configura√ß√£o permite que voc√™ defina explicitamente como o servidor 
        Kestrel vai escutar nas portas HTTP e HTTPS.

5. Configura√ß√£o no Program.cs para ambientes fora do Visual Studio (como produ√ß√£o)

    . Se n√£o estiver usando o launchSettings.json (ex.: deploy em servidor ou container), defina 
        manualmente as portas:

        builder.WebHost.ConfigureKestrel(serverOptions =>
        {
            serverOptions.ListenAnyIP(5000); // HTTP
            serverOptions.ListenAnyIP(5001, listenOptions =>
            {
                listenOptions.UseHttps();
            });
        });

6. Middleware na ordem correta

    app.UseHttpsRedirection(); // Sempre no topo dos middlewares de pipeline
    app.UseStaticFiles();
    app.UseRouting();
    app.UseAuthentication(); // Se usar autentica√ß√£o
    app.UseAuthorization();
    app.MapControllers();

7. Produ√ß√£o ‚Äî Certificados v√°lidos (N√£o usar o de desenvolvimento)

    . Para produ√ß√£o, use certificados v√°lidos de uma Autoridade Certificadora (CA), como:

        . Let's Encrypt (gratuito)

        . Cloudflare

        . GoDaddy, DigiCert, etc.

    Configure no Kestrel:

        serverOptions.Listen(IPAddress.Any, 443, listenOptions =>
        {
            listenOptions.UseHttps("caminho/do/certificado.pfx", "senha-do-certificado");
        });

8. (Opcional) Usando Proxy reverso (NGINX, IIS, etc.)

    . Se voc√™ usa um proxy reverso que faz o SSL, configure:

        builder.Services.Configure<ForwardedHeadersOptions>(options =>
        {
            options.ForwardedHeaders = 
                ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto;
        });

        app.UseForwardedHeaders();

    . Isso garante que sua aplica√ß√£o reconhe√ßa corretamente se a conex√£o √© HTTPS quando o 
        SSL est√° sendo gerenciado pelo proxy.

9. Checklist Final ‚Äî HTTPS funcionando perfeitamente

+---------------------------------------------+--------------+
| Item                                        | ‚úÖ Verificado|
| ------------------------------------------- | ------------ |
| Certificado de desenvolvimento instalado    | ‚úîÔ∏è           |
| `launchSettings.json` configurado           | ‚úîÔ∏è           |
| Middleware `UseHttpsRedirection` ativo      | ‚úîÔ∏è           |
| Portas HTTPS/HTTP configuradas corretamente | ‚úîÔ∏è           |
| Ordem correta dos middlewares               | ‚úîÔ∏è           |
| Produ√ß√£o usa certificado v√°lido             | ‚úîÔ∏è           |
| Proxy reverso configurado (se usado)        | ‚úîÔ∏è           |
+---------------------------------------------+--------------+
