Curso ASP.NET (webforms) utilizando CSharp e JavaScript
--------------------------------------------------------

https://www.tutorialspoint.com/asp.net/index.htm
https://www.dotnetfunda.com/tutorials/controls/textbox.aspx

Conceitos Fundamentais
======================

Seção 1. Como instalar o Visual Studio
-------------------------------------

    . Acesse o link abaixo, baixe a versão "Community" e execute o programa baixado:

        https://visualstudio.microsoft.com/pt-br/downloads/

    . Escolha as opções abaixo no instalador:

        . Cargas de Trabalho:

            . ASP.NET e desenvolvimento web

            . Desenvolvimento de .NET Multi-Plataforma App Ui

            . Desenvolvimento Desktop com .NET

            . Desenvolvimento com a plataforma universal do Windows

            . Processamento e armazenamento de dados

    . Depois que fizer a instalação do Visual Studio, caso queiramos instalar algum componente que 
        ficou de fora da instalação inicial, basta:
        
        . Acessar o programa "Visual Studio Installer", na opção
            modificar e escolher as opção que ficaram de fora da instalação inicial.

        . Ou, acesse o "Visual Studio", opção "Ferramentas/Obter Ferramentas ou Funcionalidades"

    . Ao acessar o Visual Studio escolha as opções:

        . Abrir um projeto ou solução

        . Ou, Criar um projeto

Aula 4. O que é AXML?
---------------------

    . O XAML (Extensible Markup Language) é uma linguagem baseada em XML desenvolvida pela Microsoft para 
        criar interfaces de usuários de forma simples e rápida.

    . Os arquivos AXML possuem a extensão .xaml e geralmente são criados por meio de uma ferramenta visual,  
        tal como o Visual Studio.  O AXML é utilizado juntamente com outras linguagens a fim de criar 
        interfaces tanto para aplicações compiladas quanto para aplicações interpretadas.

    . Seu uso permite criar aplicações que separam totalmente a lógica de programação da criação da 
        interface, isto é, as ações que as aplicações irão executar são implementadas em um arquivo 
        separado do arquivo utilizado para definir a interface da aplicação.


Seção 2 - Conhecendo os componentes
===================================

Módulo 1 - Conhecendo os Componentes 
====================================

    Aula 5. Estrutura básica de uma página ASP.NET
    ----------------------------------------------

        . Para trabalhar com ASP.NET WebForm é necessário instalar alguns componentes no IDE:

            . Acesse o vídeo abaixo para mais detalhes:

                https://www.youtube.com/watch?v=ANfMct1qFcs 

            . Acesse a opção de menu "Ferramentas/Obter Ferramentas ou Funcionalidades"

            . Acesse o item "Componentes Individuais"

            . No item ".NET" selecione todos os itens deste grupo

            . IMPORTANTE: os passos acima deste item é necessário para habilitar a criação de projeto "Webforms"

        . Acesse o Visual Studio e escolha a opção "Criar um Projeto"

        . Na janela que se abre de "Criar Novo Projeto".

        . Na janela que se abre "Configurar se novo projeto" informe as configurações abaixo:

            Nome do Projeto:    [Nome do projeto, Exemplo: AloMundo]
            Local:              [Pasta para gravar o projeto]
            Nome da Solução:    [Nome da Solução, pode ser o mesmo nome do projeto, Exemplo: AloMundo]
            
            Colocar a solução 
            e o projeto no 
            mesmo diretório:    True

            Estrutura:          ".NET Framework 4.6.2" 

        . Na tela que se abre "Informações Adicionais" informe as configurações abaixo:

            Estrutura:              .NET Core 5.0
            Configurar para HTTPS:  True
            Habilitar Docker:       False

        . Na tela que se abre "Criar um Aplicativo Web ASP.NET" escolha o item "Vazio"

        . Configure o Navegador Padrão em:

            . Acesse na barra de ferramentas "IIS Express / Navegador da Web / Brave, Chrome, ...

        . Na estrutura do projeto, no item com o nome do projeto, clique com o direito e escolha a opção:

            . Adicionar / Formulário da Web

            . Informe o nome do formulário:

                "AloMundo"

            . A página criada será assim:

                <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="AloMundo.aspx.cs" Inherits="AloMundo2.AloMundo" %>

                <!DOCTYPE html>

                <html xmlns="http://www.w3.org/1999/xhtml">
                <head runat="server">
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                    <title></title>
                </head>
                <body>
                    <form id="form1" runat="server">
                        <div>
                        </div>
                    </form>
                </body>
                </html>

            . Acesse a aba "Design" no rodapé do formulário para ir ao modo de desenho do formulário.

            . Caso queira apresentar tanto o modo código da página e design juntos, acesse no rodapé a aba "Dividir".

            . Acesse a opção de menu "Exibir/Caixa de Ferramentas".

                . Caixa de Ferramentas é o local que disponibiliza os componentes (Input, ListBox, etc.) para incluir no formulário.

            . No modo "Design" localize o componente "TextBox", dê um duplo clique e verifique se este componente foi para o formulário.

                . Clique no componente e pressione "F4" para apresentar as propriedades do componente.

                    . Altere a seguinte propriedade abaixo:

                        ID:                 "txtMsg"

            . Localize o componente "Button", dê um duplo clique.

                . Acesse as propriedades deste componente e altere a propriedade abaixo:

                    ID:                     "btnExecutar"
                    Text:                   "Executar"

            . Localize o componente "Label", acrescente ele no formulário:

                . Altere as propriedades abaixo:

                    Text:                   "Titulo do Texto"
                    ID:                     "lblTexto"

            . Após a inserção desses componentes nossa página ficará com seguinte conteúdo:

                <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="AloMundo.aspx.cs" Inherits="AloMundo2.AloMundo" %>

                <!DOCTYPE html>

                <html xmlns="http://www.w3.org/1999/xhtml">
                <head runat="server">
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                    <title></title>
                </head>
                <body>
                    <form id="form1" runat="server">
                        <div>
                            <p>
                                <asp:Label ID="lblTexto" runat="server" Text="Título do Texto"></asp:Label><br />
                                <asp:TextBox ID="txtMsg" runat="server" Width="369px"></asp:TextBox><br />
                            </p>
                            <asp:Button ID="btnExecutar" runat="server" Text="Executar" OnClick="btnExecutar_Click" />
                        </div>
                    </form>
                </body>
                </html>

                . Está pagina será identificada no projeto pelo seu nome + ".aspx" (AloMundo.aspx).

            . Dê um duplo clique no componente "btnExecutar" e altere o evento dele como abaixo:

                ...
                protected void btnExecutar_Click( object sender, EventArgs e)   
                {
                    if (txtMsg.Text == "")
                    {
                        lblTexto.Text = "Alô Mundo - Aula '";
                    }
                    else
                    {
                        lblTexto.Text = txtMsg.Text;
                    }
                }

            . Execute a solução com o botão "F5"

        . Todos os controles ASP.NET tem seus eventos implementados na classe ".cs" da página. O evento clique
            do botão "btnExecutar" foi implementado na classe "AloMundo.aspx.cs".

            . Neste caso os objetos ".aspx" e ".aspx.cs" são inteiramente dependentes. Exemplo:

                AloMundo.aspx       --->        AloMundo.aspx.cs

            . A tag "<asp:...>" informa ao ASP.NET que o objeto deverá postar para o servidor e encontrar o seu evento 
                na classe "aspx.cs". Caso não for colocado esta tag, colocando somente as tags de HTML, o ambiente não 
                irá no servidor procurar as ações do evento.

            . Exemplo:

                <asp:Button ID="btnExecutar" runat="server" Text="Executar" OnClick="btnExecutar_Click" />
                                                    |
                                                    V
                protected void btnExecutar_Click( object sender, EventArgs e)   

        . Os eventos mais comuns nos controles são:

            Event	                 Attribute Server	    Controls
            -----                   ----------------        --------

            Click	                OnClick	                Button, image button, link button, image map
            Command	                OnCommand	            Button, image button, link button
            TextChanged	            OnTextChanged	        Text box
            SelectedIndexChanged	OnSelectedIndexChanged	Drop-down list, list box, radio button list, check box list.
            CheckedChanged	        OnCheckedChanged	    Check box, radio button

        . Os eventos padrões dos principais controles:

            Control	            Default Event
            -------             -------------
            AdRotator	        AdCreated
            BulletedList	    Click
            Button	            Click
            Calender	        SelectionChanged
            CheckBox	        CheckedChanged
            CheckBoxList	    SelectedIndexChanged
            DataGrid	        SelectedIndexChanged
            DataList	        SelectedIndexChanged
            DropDownList	    SelectedIndexChanged
            HyperLink	        Click
            ImageButton	        Click
            ImageMap	        Click
            LinkButton	        Click
            ListBox	            SelectedIndexChanged
            Menu	            MenuItemClick
            RadioButton	        CheckedChanged
            RadioButtonList	    SelectedIndexChanged

        . Os principais eventos de uma página ".aspx":

            DataBinding - It is raised when a control binds to a data source.

            Disposed - It is raised when the page or the control is released.

            Error - It is a page event, occurs when an unhandled exception is thrown.

            Init - It is raised when the page or the control is initialized.

            Load - It is raised when the page or a control is loaded.

            PreRender - It is raised when the page or the control is to be rendered.

            Unload - It is raised when the page or control is unloaded from memory.


    Aula 6. Como criar um projeto no Visual Studio 2019
    ---------------------------------------------------

        . Abra o Visual Studio 2022

        . Clique no botão "Criar um projeto"

        . Na tela "Criar um novo projeto" escolha a opção "Aplicativo Web ASP.NET (.NET Framework)

        . Na tela "Configurar seu novo projeto" informe:

            Nome do Projeto:                "Nome do projeto"
            Local:                          "Pasta para criar o projeto"
            Nome da Solução:                "Container de projetos"
            Colocar a solução e projeto no
            mesmo diretório:                True
            Estrutura:                      ".NET Framework 4.6" a ".NET Framework 4.8.x"
        
            . Clique no botão "Criar"

        . Na tela "Criar um Aplicativo Web ASP.NET" podemos escolher:

            . Tipo do projeto:

                Vazio:                          True        (Para o treinamento é true)
                Web Forms:                      False
                MVC:                            False
                API Web:                        False
                Aplicativo de página única:     False

            . Autenticação:                     False

            . Adicionar as pastas e as principais referências:

                Formulários da Web:             False
                MVC:                            False
                API Web:                        False

            . Avançado

                Configurar para HTTPS:          false   (Para o treinamento)
                Suporte do Docker:              False
                Além disso, crie um projeto 
                para testes de unidade:         Flase

            . Clique no botão "Criar"

        . No projeto criado clique na aba lateral "Gerenciador de Soluções"

        . Clique com o botão direito sobre o nó com o nome do projeto e escolha a opção "Adicionar/Formulário Web"

        . Na tela que abriu informe o nome do formulário:

            "Default"

        . Acesse a página criada:

            . Acesse a aba "Origem", no rodapé da página, onde encontra-se o código HTML dela.

            . Acesse a aba "Design", no rodapé, onde podemos fazer o desenho da página acessando a "Caixa de Ferramentas" arrastando
                os componentes para dentro do formulário.

            . Acesse a aba "Dividir", no rodapé, onde podemos visualizar tanto o código, quanto o desenho, da página.

            . Detalhe: 

                . No modo "Design" podemos clicar no layout da página e navegar por ela com as setas. Se dermos "Enter" será 
                    inserido a tag HTML "<br/>" no código.

            . Crie no formulário os componentes:

                Label
                TextInput
                Button

            . Para criar um evento basta selecionar o objeto, acessar a aba de propriedades e clicar no botão "Evento" com o simbolo de trovão.

                . No método "Click" do componente "Button" insira o código abaixo:

                    Label1.Text = "Alô " + TextBox1.Text;
        
            . Execute o projeto acionando o botão "ISS Express"

            . Para utilizar o recurso de carga automática nos casos de alteração do fonte, sem a necessidade de para o projeto e inicia-lo novamente,
                acesse o botão "Recarga Dinâmica" com o simbolo do "Fogo".


    Aula 7.01 Conhecendo os componentes Button, TextBox e DropDownList
    ------------------------------------------------------------------

        . Adicione um formulário com o nome "wfComponentes".

        . Escolha na "Caixa de Ferramentas" o componente "HTML/Table" e arraste ele para dentro do formulário.

            . Na primeira linha do html/table configure as três colunas, sendo:

                Coluna 1:       {
                    Caption:        "Site",
                    Line:           {
                        TextInput: {
                            Diversos.ID:    txtSite    
                        }
                    }
                },
                Coluna 2:       {
                    Caption:        "Endereço",
                    Line:           {
                        TextInput: {
                            Diversos.ID:    txtEndereco  
                        }
                    }
                },
                Coluna 3:       {
                    Caption:        "Opções",
                    Line:          {
                        Button1: {
                            Diversos.ID:    "btnInserir",
                            Font.Text:      "Inserir Site"
                        }
                    }
                }

            . Na segunda linha:

                Coluna 1:       {
                    Line:           {
                        DropDownList: {
                            Diversos.ID:    ddlSite    
                        }
                    }
                },

                . Arraste o componente "DropDownList" para dentro da coluna:
                
                    . Clique na seta ao lado do "DropDownList".

                    . Clique no link "Editar Itens..." após arrastá-lo.
                    
                    . Na tela que se abre acione o botão "Adicionar" e complete as propriedades: "Text" e "Valor" para cada item 
                        incluido. Inclua uns dois, ou três itens.

                . No código da página é possível implementar novos itens ao "DropDownList":

                    <asp:DropDownList ...>
                        <asp:ListItem>Item 1</asp:ListItem>
                        <asp:ListItem>Item 2</asp:ListItem>
                        ...                     <!-- Novos itens -->
                    </asp:DropDownList>

                . Clique na seta ao lado do "DropDownList", acesse a propriedade "Valor" e para cada item coloque um valor (1,2,...).

            . No botão do formulário, crie o evento "btnInserir_Click" com o código abaixo:

                ddlSite.Items.Add( txtSite.Text );

            . Execute o projeto e teste a inserção de um novo item no "DropDownList"

            . Altere o código do evento "btnInserir_Click" pelo código abaixo:

                ListItem item = new ListItem( txtSite.Text, ddlSite.Items.Count.ToString());

                ddlSite.Items.Add( item );

                txtSite.Text = "";

            . Execute o projeto e teste a inserção de um novo item no "DropDownList"


    Aula 8.02 Conhecendo os componentes DropDownList e ListBox
    ----------------------------------------------------------

        . DropDownList  - Equivale a uma lista de uma linha, que ao clicar na seta, ou na lista do objeto, é aberto lista para escolha de um item.

        . ListBox       - Equivale a uma lista expandida num retangulo, com várias linhas, que pode haver um scroll para escolhermos um item.

        . Na segunda linha:

            Coluna 2:       {
                Line:           {
                    ListBox: {
                        Diversos.ID:    lstEndereco   
                    }
                }
            },

            . Arraste o componente "ListBox" para dentro da coluna:
            
                . Clique na seta ao lado do "ListBox".

                . Clique no link "Editar Itens..." após arrastá-lo.
                
                . Na tela que se abre acione o botão "Adicionar" e complete as propriedades: "Text" e "Valor" para cada item 
                    incluido. Inclua uns dois, ou três itens.

            . Altere o código do evento "btnInserir_Click" pelo código abaixo:

                ListItem item = new ListItem( txtEndereco.Text, lstEndereco.Items.Count.ToString());

                lstEndereco.Items.Add( item );

                txtEndereco.Text = "";

            . Retorne a linha no. 1 e insira mais um componente "Button":

                Coluna 3:       {
                    Caption:        "Opções",
                    Line:          {
                        ...,                
                        Button2: {                              // Botão inserido
                            Diversos.ID:    "btnSelecionar",
                            Font.Text:      "Selecionar Site"
                        }
                    }
                }

            . Acesse a aba de propriedades do botão "btnSelecionar" e clique no botão "Evento" com o simbolo de trovão.

                . No método "Click" do componente "Button" insira o código abaixo:

                    ...                     // Método inserido
                    protected void btnSelecionar_Click( object sender, EventArgs e)
                    {
                        txtSite.Text = ddlSite.Text;            // Traz o valor do item da primeira e não o texto da linha selecionada
                        txtEndereco.Text = lstEndereco.Text;    // Traz o valor do item da primeira e não o texto da linha selecionada
                    }
            
            . Execute o projeto e teste a seleção do item no "ListBox"

            . Pare a execução e faça as alterações abaixo para pegar o texto da linha selecionada:

                    ...                     
                    protected void btnSelecionar_Click( object sender, EventArgs e)
                    {
                        ListItem item = ddlSite.SelectedItem;       // Linha inserida

                        txtSite.Text = item.Text;                   // Linha alterada        

                        ListItem item = lstEndereco.SelectedItem;   // Linha Inserida

                        txtEndereco.Text = item.Text;               // Linha alterada
                    }


    Aula 9.Conhecendo a interface (Painéis)
    ---------------------------------------
    
        . Gerenciador de Servidores/Server Explores -  Acessando a opção "View/Server Explorer", ou "Exibir/Gerenciador de Servidores", podemos acessar o 
            painel de gerenciadores de servidores.

            . Dentre as varias configurações, podemos incluir conexões com banco de dados. 
            
                . Basta clicar com o botão direito sobre o nó "Connections".

                . Escolher a opção "Add Connection..."

                . Alguns prodedores/providers de acesso a banco já vem instalado, como: SQL Server e o Oracle.

                . Caso o provider não esteja disponível será necessário localiza-lo na internet e instala-lo.
                    No caso do MySQL podemos baixar o seu provedor pelo link abaixo:

                    https://downloads.mysql.com/archives/visualstudio/

                    . Após a instalação do provider e a configuração da conexão, acesse a ferramenta do MySQL em "View / Toolbars / MySQL"

                    . Para mais detalhes de como trabalhar com MySQL no Visual Studio acesse o link abaixo:

                        https://www.devmedia.com.br/como-integrar-o-mysql-ao-visual-studio/36872

        . Gerenciador de Soluções/Solution Explorer - Acessamos todos os objetos do projeto, para deixar visivel acesse "Exibir/Gerenciador de Soiluções", ou "View/Solution Explorer"

        . Caixa de Ferramentas/Tolbox - Local que contêm os componentes necessários para construir um formulário Web.

            . Os componentes dessa caixa só fica visivel quando estamos em modo de design

            . Acesse "Exibir/Ferramentas", ou "View/Toolbar", para deixá-la fixada no Visual Studio

        . Ferramenta de Diagnostico/Diagnostic Tools - Caixa que apresenta informações de performance da aplicação, possibilitando a identificação as informações 
            em tempo de execução.

            . Para mais informações dessa caixa, principal como trabalhar com ela em "Debug" acesse o link abaixo:

                https://www.codeguru.com/csharp/visual-studio-diagnostic-tools-breakdown/

        . Proprieadades/Properties - Caixa responsável pela alteração das propriedades dos objetos do formulário. Podemos acessá-la através da tecla "F4"


    Aula 10.03 Exercício Tabuada
    ----------------------------

        . Clique com o direito sobre o nó do projeto e escolha a opção "Adicionar/Formulário da Web" como nome "wfTabuada".

        . Desenho o formulário como abaixo:

            Tabuada

            +-------------------------------+   +-------------------+
            | DropDownList:dlNumeros    | V |   | Button:btExecutar |
            +-------------------------------+   +-------------------+

            +-------------------------------+
            | ListBox:lbDados               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            +-------------------------------+

        . DropDownList:dlNumeros    - Insira os valores de 1 a 9 nos itens desse componente.

            . Acesse o evento "Page_Load" e insira as linhas abaixo:

                ...
                protected void Page_Load(object sender, EventArgs e)
                {
                    if (!IsPostBack)    
                    {
                        for (int i = 2; i < 11; i++)
                        {
                            dlNumeros.Items.Add( i.ToString() );
                        }
                    }
                }
                ...

            . "IsPostBack" - Indica se já estivemos nessa página. De uma forma simplificada podemos dizer que quando a 
                                primeira requisição para uma página ocorre ela é criada(construtor) e o seu evento OnInit() é 
                                chamado, logo em seguida o evento page_Load() e acionado e ela é devolvida para o navegador 
                                do usuário e a página é destruída. O usuário recebe a página navega e ao final efetua alguma 
                                ação clicando em um botão , link, etc. Isto exige uma nova requisição ao servidor para 
                                execução do código que porventura possa existir na página. Essa requisição é o que chamamos 
                                postback.

                . Para mais detalhes verifique o link abaixo:
                
                    https://www.macoratti.net/07/07/aspn_pbk.htm

        . Button:btExecutar         - Insira no método "Click" deste componente o código abaixo: 

            ...
            protected void btExecutar_Click( object sender, EventArgs e)
            {
                lbDados.Items.Clear();

                ListItem li = dlNumeros.SelectedItem;
                int n = Convert.ToInt32( li.Value );
                int t = 0;

                for (int = 0; i < 11; i++)
                {
                    t = i * n;
                    lbDados.Items.Add( i.ToString() + "X" + n.ToString() + " = " + t.ToString() );
                }
            }
            ...

        . Execute o projeto e verifique se a execução do formulário está correta.


    Aula 11.Duvida - IsPostBack
    ---------------------------

        . IsPostBack pode ser entendido como: "É a primeira que a página foi submetida", caso foi a primeira vez o valor de "IsPostBack" é true, caso contrário é falso.

    

    Aula 12.04 DropDownList e ListBox
    ---------------------------------

        . Retorne a tela da aula 8.02.

        . Altere o formulário como abaixo:

            Site                                                            Endereço

            ________________________________________________________        _________________________________________________________

            +-------------------------------------------------------+
            |                                                   | ^ |       Opções                  
            |                                                   |   |       
            |                                                   |   |       +-------------------+   +-----------------------+    
            |                                                   |   |       |   Inseriri Site   |   |   Selecionar Site     |
            |                                                   |   |       +-------------------+   +-----------------------+
            |                                                   |   |
            |                                                   |   |
            |                                                   | V |
            +-------------------------------------------------------+
    
            +-------------------------------------------------------+
            |                                                   | V |
            +-------------------------------------------------------+

        . Clique nos componentes "DropDown" e "ListDown" na seta ao lado de cada componente, na tela que abrir clique no botão "Remover" para remover os itens dessas listas


        . Altere o código do evento "btnInserir_Click" pelo código abaixo:

            ListItem item = new ListItem( txtSite.Text, txtEndereco.Text );

            txtEndereco.Text = "";

            txtSite.Text = "";

        . Execute o projeto e teste se digitando um site, endereço e clicando no botão "Inserir Site" a carga está sendo feita com sucesso no "ListBox" "lbEndreco"

        . Altere a propriedade do "ListBox" "lbEndereco" abaixo:

            comportamento.SelectiontMode:   Multiple

        . Execute o projeto e verifique se está sendo possível selecionar mais de um item no "ListBox"

        . Altere o código do evento "btSelecionar-Click" pelo abaixo:

            protected void btSelecionar_Click( object sender, EventArgs e)
            {
                dlSite.Items.Clear();
                ListItem li;

                for ( int i = 0; i < lbEndereco.Items.Count; i++)
                {
                    li = lbEndereco.Items[i];

                    if ( li.selected)
                    {
                        li.Selected = false;        // Para evitar o erro de "SelectionMode: Multiple". O objeto "li" herda essa configuração do "ListBox", porém o "DropDown" não aceita essa propriedade como Multiple

                        dlSite.Items.Add(li);
                    }
                }
            }

        . Execute o projeto e verifique se ao escolher vários itens no "ListBox" e clicar no botão "Selecionar Site" os itens estão indo com sucesso para
            o "DropDown"

        . Outra forma de fazer a atualização do "DropDown" seria altere o código do evento "btSelecionar-Click" pelo abaixo:

            protected void btSelecionar_Click( object sender, EventArgs e)
            {
                foreach( ListItem item in lbEndereco.Items)
                {
                    if (item.Selected)
                    {
                        item.Selected = false;
                        dlSite.Items.Add( item );
                    }
                }
            }

        . Execute o projeto e verifique se ao escolher vários itens no "ListBox" e clicar no botão "Selecionar Site" os itens estão indo com sucesso para
            o "DropDown"


    Aula 13.05 Table
    ----------------

        . Retorne ao formulário da Aula 10.03 (Tabuada).

        . Arraste da caixa de ferramentas o componente "Table" do conjunto "Padrão"

            Tabuada

            +-------------------------------+   +-------------------+
            | DropDownList:dlNumeros    | V |   | Button:btExecutar |
            +-------------------------------+   +-------------------+

            +-------------------------------+
            | ListBox:lbDados               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            |                               |
            +-------------------------------+

            +-------+
            |       |  --> "asp:table" inserida
            +-------+

        . Altere a propriedade "Diversos.ID" para "tbDados"

        . Acesse a propriedade "Rows" e insira 1 linha "TableRow" através do botão "Adicionar"

            . Clique na primeira linha "TableRow[0]"

                . Acesse a propriedade "Diversos.Cells"

                    . Na tela que se abrir, clique no botão "Adicionar" e crie 5 "TableCell", ou colunas

                        . Acesse a propriedade da celula do meio "TableCell[1].Text" e altere para a letra "X"

                        . Acesse a propriedade da celula do meio "TableCell[2].Text" e altere para a letra "0"

                        . Acesse a propriedade da celula do meio "TableCell[3].Text" e altere para a letra "="

                        . Feche a tela de propriedade das "TableCell"

        . Retorne ao desenho da tela e acesse a aba "Origem"

        . Na parte que foi montado o código "Html" com a linha e celulas da table, copie o conjunto de "Row and Cells" 
            abaixo dela mais 9 vezes, formando um total de 10 "Rows and Cells"

        . Altere o valor da terceira celula de cada linha para um número sequencial 1,2,3,... em todas as celulas

            ...
            <asp:Table ID="tbDados" 
                        runat="server" 
                        BackColor="Red" 
                        BorderColor="Lime" 
                        BorderWidth="2px" 
                        CellPadding="5" 
                        CellSpacing="5" 
                        Font-Bold="True" 
                        Font-Size="Medium" 
                        Visible="False" 
                        Width="247px">
                <asp:TableRow runat="server">
                    <asp:TableCell runat="server"></asp:TableCell>
                    <asp:TableCell runat="server">X</asp:TableCell>
                    <asp:TableCell runat="server">0</asp:TableCell>
                    <asp:TableCell runat="server">=</asp:TableCell>
                    <asp:TableCell runat="server"></asp:TableCell>
                </asp:TableRow>
                <asp:TableRow runat="server">
                    ...
                    <asp:TableCell runat="server">1</asp:TableCell>     <!-- Linha Alterada -->
                    ...
                </asp:TableRow>
                <asp:TableRow runat="server">
                    ...
                    <asp:TableCell runat="server">2</asp:TableCell>     <!-- Linha Alterada -->
                    ...
                </asp:TableRow>
                ...
            </asp:Table>
            ...

        . Acesse o código do evento "btExecutar_Click" e altere o código conforme abaixo:

            ...
            protected void btExecutar_Click( object sender, EventArgs e)
            {
                lbDados.Items.Clear();

                ListItem li = dlNumeros.SelectedItem;
                int n = Convert.ToInt32( li.Value );
                int t = 0;

                for (int = 0; i < 11; i++)
                {
                    t = i * n;
                    lbDados.Items.Add( i.ToString() + "X" + n.ToString() + " = " + t.ToString() );
                    
                    tbDados.Rows[i].Cells[0].Text = n.ToString();   // Linha inserida
                    tbDados.Rows[i].Cells[4].Text = t.ToString();   // Linha inserida
                }
            }
            ...

        . Altere a proprieda "Comportamento.Visible" para "False" do componente "lbDados".

        . Execute o projeto e verifique se o botão de executar está atualizando corretamente a nossa "Table".


    Aula 14.06 Table e PlaceHolder
    ------------------------------

        . O componente "PlaceHolder" é utilizado como um container, o qual outros controles podem ser adicionados dinamicamente. Este componente não tem 
            nenhum HTML de saída, ele é usado somente para carregar um componente num lugar especifico na página 

        . Selecione o componente "PlaceHolder" na caixa de ferramentas e arraste ele abaixo para o formulário, abaixo da "Table" que criamos na aula
            passada.

        . Clique na "Table" criada na aula anterior e altere a propriedade dela como abaixo:

            Comportamento.Visible: False

        . Comente todo o código do evento "btExecutar_Click" e deixe-o com o conteúdo abaixo:

            ...
            protected void btExecutar_Click(object sender, EventArgs e)
            {
                //lbDados.Items.Clear();
                ListItem li = dlNumeros.SelectedItem;
                int n = Convert.ToInt32(li.Value);
               
                /*  Linhas comentadas

                int t = 0;                                                                        
                for (int i = 0; i < 11; i++)
                {
                    t = i * n;
                    //lbDados.Items.Add(i.ToString()+" X "+n.ToString()+" = "+t.ToString());
                    tbDados.Rows[i].Cells[0].Text = n.ToString();
                    tbDados.Rows[i].Cells[4].Text = t.ToString();
                }

                */

                // Linhas abaixo inseridas

                Table tabela = new Table();
                int t = 0;
                for (int i = 0; i <= 10; i++)
                {
                    TableRow linha = new TableRow();
                    //1 celula
                    TableCell coluna = new TableCell();
                    coluna.Text = n.ToString() + " X " + i.ToString() + " = ";
                    linha.Cells.Add(coluna);
                    //2 celula
                    coluna = new TableCell();
                    t = i * n;
                    coluna.Text = t.ToString();
                    linha.Cells.Add(coluna);
                    tabela.Rows.Add(linha);
                }
                PlaceHolder.Controls.Add(tabela);
            }

    Aula 15.07 Calendar
    -------------------

        . Clique sobre o nô do projeto, escolha a opção "Adicionar/ Formulário da Web".

        . Informe o nome do formulário "wfDiasDeVida".

        . Arraste o componente "HTML.Table" para dentro do formulário.

            . Configure a "Table" conforme desenho abaixo:

                +---------------------------------------+-------------------------------------------+-----------------------------------+
                |   Data de Nascimento                  |       Data Atual                          |                                   |
                +---------------------------------------+-------------------------------------------+-----------------------------------+
                |                                       |                                           |                                   |
                |   +-------------------------------+   |   +-------------------------------+       |                                   |
                |   |   Setembro de 2017            |   |   |   Setembro de 2017            |       |                                   |
                |   +-------------------------------+   |   +-------------------------------+       |   +----------------------------+  |
                |   | Dom Seg Ter Qua Qui Sex Sab   |   |   | Dom Seg Ter Qua Qui Sex Sab   |       |   |   Calcular Dias de Vida    |  |
                |   +-------------------------------+   |   +-------------------------------+       |   +----------------------------+  |
                |   |  1   2   3   4   5   6   7    |   |   |  1   2   3   4   5   6   7    |       |                                   |
                |   | ....                          |   |   |   ...                         |       |   Dias de Vida:                   |
                |   | ....                          |   |   |   ...                         |       |                                   |
                |   | ....                          |   |   |   ...                         |       |                                   |
                |   | ....                          |   |   |   ...                         |       |                                   |
                |   +-------------------------------+   |   +-------------------------------+       |                                   |
                |                                       |                                           |                                   |
                +---------------------------------------+-------------------------------------------+-----------------------------------+

                . "Dias de Vida"

                    Label:  {
                        Diversos.ID: "lbResultado"
                    }

        . Clique nos componentes "calendar" dos formulários, na seta ao lado e clique na opção "Formatação Automática.

            . Escolha uma das formatações disponiveis.

        . Altere o evento do "Button" conforme abaixo:

            ...
            protected void Button1_Click(object sender, EventArgs e)
            {
                int dian=0, anon=0, mesn=0;
                int diaa = 0, anoa = 0, mesa = 0;

                dian = Calendar1.SelectedDate.Day;
                mesn = Calendar1.SelectedDate.Month*30;
                anon = Calendar1.SelectedDate.Year*365;

                diaa = Calendar2.SelectedDate.Day;
                mesa = Calendar2.SelectedDate.Month*30;
                anoa = Calendar2.SelectedDate.Year*365;

                int total = (diaa + mesa + anoa) - (dian + mesn + anon);
                lbResultado.Text = "Dias de vida: "+total.ToString();

            }
            ...

        . Insira o código abaixo no evento "Page_load"

            ...
            protected void Page_Load(object sender, EventArgs e)
            {
                Calendar2.SelectedDate = DateTime.Now;
            }
            ...

        . Execute o projeto e faça o teste do formulário.

    
    Aula 16. 08 Panel e BulletList
    ------------------------------

        . Clique sobre o nô do projeto, escolha a opção "Adicionar/ Formulário da Web".

        . Informe o nome do formulário "wfParOuImparFatorial".

        . Arraste o componente "BulletedList" para dentro da "Div" do formulário.

            . Altere as propriedades desse componente como abaixo:

                Misc.ID:            blLista,
                Misc.Items:         [
                    ListemItem: {
                        Text:   "Par ou Impar"
                    },
                    ListemItem: {
                        Text:   "Calcula o Fatorial"
                    }
                ]

        . Arraste o componente "Panel" a baixo do "BulletedList"

            . O componente "Panel" serve para agrupar os componentes.

        . Altere o formulário "wfParOuImparFatorial.aspx" como abaixo:

            <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="wfParOuImparFatorial.aspx.cs" Inherits="waConhecendoOsComponetes.wfParOuImparFatorial" %>

            <!DOCTYPE html>

            <html xmlns="http://www.w3.org/1999/xhtml">
            <head runat="server">
                <title></title>
            </head>
            <body>
                <form id="form1" runat="server">

                    <!-- ALTERE O CODIGO DA DIV ABAIXO NO PROJETO -->


                    <div>
                        <asp:BulletedList   ID="blLista" 
                                            runat="server" 
                                            BorderStyle="None" 
                                            BulletStyle="Square" 
                                            DisplayMode="LinkButton"            <!--    DisplayMode serve para deixar o "BulletedList" como um link. 
                                                                                        Podemos também alterar a propriedade do componente 
                                                                                        "Behavior.DisplayMode" para "LinkButton". Em seguida, clique no 
                                                                                        icone de trovão, ao lado das propriedade, encontre o evento "Click",
                                                                                        de um duplo clique onde seria o nome do evento para construir o evento  
                                                                                        "blLista_Click" -->
                                            OnClick="blLista_Click"             <!-- Associa o evento "OnClick" com o evento do ASP.NET "blLista_Click" -->
                                            Visible="False">
                            <asp:ListItem>Par ou Impar</asp:ListItem>
                            <asp:ListItem>Calcula o Fatorial</asp:ListItem>
                        </asp:BulletedList>
                        <br />
                        <br />
                        <asp:Panel ID="pnParOuImpar" runat="server" Visible="False">
                            <asp:Label ID="Label1" runat="server" Text="Verifica se o número é par ou impar"></asp:Label>
                            <br />
                            <asp:TextBox ID="txtValorpn1" runat="server"></asp:TextBox>
                            <asp:Button ID="Button1" runat="server" Text="Verificar" OnClick="Button1_Click" />
                            <br />
                            <asp:Label ID="LResp1" runat="server"></asp:Label>
                        </asp:Panel>
                        <br />
                        <asp:Panel ID="pnFatorial" runat="server" Visible="False">
                            <asp:Label ID="Label3" runat="server" Text="Calcula o fatorial de um número"></asp:Label>
                            <br />
                            <asp:TextBox ID="txtValorpn2" runat="server"></asp:TextBox>
                            <asp:Button ID="Button2" runat="server" Text="Calcular" OnClick="Button2_Click" />
                            <br />
                            <asp:Label ID="LResp2" runat="server"></asp:Label>
                        </asp:Panel>
                    </div>

                    <!-- FIM DA ALTERAÇÃO -->
                </form>
            </body>
            </html>

        . Insira os métodos abaixo  no formulário "wfParOuImparFatorial.aspx.cs" como abaixo:

            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Web;
            using System.Web.UI;
            using System.Web.UI.WebControls;

            namespace waConhecendoOsComponetes
            {
                public partial class wfParOuImparFatorial : System.Web.UI.Page
                {
                    
                    protected void Page_Load(object sender, EventArgs e)
                    {

                    }


                    // Método Inserido pelo duplo click no nome do evento na caixa de ferramentas
                    protected void blLista_Click(object sender, BulletedListEventArgs e)
                    {
                        pnParOuImpar.Visible = false;
                        pnFatorial.Visible = false;
                        switch (e.Index)
                        {
                            case 0:
                                pnParOuImpar.Visible = true;
                                break;
                            case 1:
                                pnFatorial.Visible = true;
                                break;
                        }
                    }

                    // Método Inserido pelo duplo click no nome do evento na caixa de ferramentas
                    protected void Button1_Click(object sender, EventArgs e)
                    {
                        //verificar se é par ou impar
                        int n = Convert.ToInt32(txtValorpn1.Text);
                        string txt = "O número é par";
                        if (n % 2 != 0)
                        {
                            txt = "O número é impar";
                        }
                        LResp1.Text = txt;
                    }

                    // Método Inserido pelo duplo click no nome do evento na caixa de ferramentas
                    protected void Button2_Click(object sender, EventArgs e)
                    {
                        try
                        {
                            int n = Convert.ToInt32(txtValorpn2.Text);
                            if (n < 0) {
                                LResp2.Text = "Informe apenas números positivos";
                            }
                            else
                            {
                                if (n == 0)
                                {
                                    LResp2.Text = "0! = 1";
                                }
                                else
                                {
                                    int t = n;
                                    for (int i = n-1; i > 0; i--)
                                    {
                                        t = t * i;
                                    }
                                    LResp2.Text = n.ToString()+"! = "+ t.ToString();
                                }
                            }
                        }
                        catch
                        {
                            LResp2.Text = "Permitido apenas números positivos";
                        }
                        
                    }

                }
            }

        . Execute o projeto e verifique se a tela ficou desenhada de acordo com as nossas especificações.


    Aula 17. 09 Panel e RadioButton
    -------------------------------

        . Insira o código abaixo na página ASP "wfParOuImparFatorial.aspx"

            ...
            <div>
                <asp:BulletedList   ID="blLista" 
                                    runat="server" 
                                    BorderStyle="None" 
                                    BulletStyle="Square" 
                                    DisplayMode="LinkButton"            <!--    DisplayMode serve para deixar o "BulletedList" como um link. 
                                                                                Podemos também alterar a propriedade do componente 
                                                                                "Behavior.DisplayMode" para "LinkButton". Em seguida, clique no 
                                                                                icone de trovão, ao lado das propriedade, encontre o evento "Click",
                                                                                de um duplo clique onde seria o nome do evento para construir o evento  
                                                                                "blLista_Click" -->
                                    OnClick="blLista_Click"             <!-- Associa o evento "OnClick" com o evento do ASP.NET "blLista_Click" -->
                                    Visible="False">
                    <asp:ListItem>Par ou Impar</asp:ListItem>
                    <asp:ListItem>Calcula o Fatorial</asp:ListItem>
                </asp:BulletedList>
        
                <!-- Código inserido -->

                <asp:RadioButton ID="RadioButton1" runat="server" />
                <asp:RadioButton ID="RadioButton2" runat="server" />
               
                <!-- Fim da Inserção -->

                ...
            </div>
            ...

            . Para gerar o código acima podemos arrastar da caixa de Ferramentas "ToolBox" o componente para dentro da página

            . Clique no componente "RadioButton1" desenhado na página e altere a propriedade abaixo:

                Text: "Par ou Impar",
                Behavior.GroupName: "g1"            

            . Clique no componente "RadioButton2" desenhado na página e altere a propriedade abaixo:

                Text: "Calcula o Fatorial ",
                Behavior.GroupName: "g1"

            . A propriedade "Behavior.GroupName" força o agrupamento dos "RadioButton", fazendo com que ao clicar num item os
                demais sejam desmarcados.

        . Execute o projeto e verifique se os componenete "RadioButton" estã funcionando corretamente.

        . Ao invés de utilizar "RadioButtons" podemos utilizar também outro componente conhecido como "RadioButtonList".

        . Apague os componentes "RadioButton" desenhado na página.

        . Arraste o componente "RadioButtonList" da Caixa de Ferramentas para dentro da página.

            . Acesse a opção "Edit Items" do componente e crie os seguintes items:

                Misc.ID:            blLista,
                Misc.Items:         [
                    ListemItem: {
                        Text:   "Par ou Impar"
                    },
                    ListemItem: {
                        Text:   "Calcula o Fatorial"
                    }
                ]

            . Altere a opção "Enable AutoPostBack" ao clicar sobre o componenete "RadioButtonList".

                . AutoPostBack  true/false. If true, the form is automatically posted back to the server when user click any 
                                of the radiobutton. It will also fire OnSelectedIndexChanged method.

            . Acesse o código da página ASP "wfParOuImparFatorial.aspx" e verifique se ficou como abaixo:

                ...
                <div>
                    <asp:BulletedList   ID="blLista" 
                                        runat="server" 
                                        BorderStyle="None" 
                                        BulletStyle="Square" 
                                        DisplayMode="LinkButton"            <!--    DisplayMode serve para deixar o "BulletedList" como um link. 
                                                                                    Podemos também alterar a propriedade do componente 
                                                                                    "Behavior.DisplayMode" para "LinkButton". Em seguida, clique no 
                                                                                    icone de trovão, ao lado das propriedade, encontre o evento "Click",
                                                                                    de um duplo clique onde seria o nome do evento para construir o evento  
                                                                                    "blLista_Click" -->
                                        OnClick="blLista_Click"             <!-- Associa o evento "OnClick" com o evento do ASP.NET "blLista_Click" -->
                                        Visible="False">
                        <asp:ListItem>Par ou Impar</asp:ListItem>
                        <asp:ListItem>Calcula o Fatorial</asp:ListItem>
                    </asp:BulletedList>
            
                    <!-- Código inserido -->

                    <asp:RadioButtonList    ID="RadioButtonList1" 
                                            runat="server" 
                                            AutoPostBack="True" 
                                            OnSelectedIndexChanged="RadioButtonList1_SelectedIndexChanged" 
                                            Width="306px">
                        <asp:ListItem>Par ou Impar</asp:ListItem>
                        <asp:ListItem>Fatorial</asp:ListItem>
                    </asp:RadioButtonList>
                    
                    <!-- Fim da Inserção -->

                    ...
                </div>
                ...

            . Acesse os eventos do componente "RadioButtonList" e dê um duplo clique no nome do evento.

                . Insira o código abaixo no componente "wfParOuImparFatorial.aspx.cs"

                    ...
                    protected void RadioButtonList1_SelectedIndexChanged(object sender, EventArgs e)
                    {
                        pnParOuImpar.Visible = false;
                        pnFatorial.Visible = false;
                        if (RadioButtonList1.SelectedIndex == 0)
                        {
                            pnParOuImpar.Visible = true;
                        } else
                        {
                            pnFatorial.Visible = true;
                        }
                    }
                    ...

        . Execute o projeto e verifique se os componenete "RadioButton" estã funcionando corretamente.

        . Para mais detalhes deste componenete acesse:

            https://www.dotnetfunda.com/tutorials/controls/radiobuttonlist.aspx

    
    Aula 18. 10 Panel e RadioButton
    -------------------------------

        . Retorno ao formulário "wfParOuImparFatorial"

        . Dê um duplo click no botão "Calcular", ou o botão com nome "Button2", para abrir o evento "click" deste componente.

            . Digite o código abaixo no evento "click" desse compomente.

                ...
                protected void Button2_Click(object sender, EventArgs e)
                {
                    try
                    {
                        int n = Convert.ToInt32(txtValorpn2.Text);
                        if (n < 0) {
                            LResp2.Text = "Informe apenas números positivos";
                        }
                        else
                        {
                            if (n == 0)
                            {
                                LResp2.Text = "0! = 1";
                            }
                            else
                            {
                                int t = n;
                                for (int i = n-1; i > 0; i--)
                                {
                                    t = t * i;
                                }
                                LResp2.Text = n.ToString()+"! = "+ t.ToString();
                            }
                        }
                    }
                    catch
                    {
                        LResp2.Text = "Permitido apenas números positivos";
                    }
                    
                }
                ...

        . Execute o projeto e verifique se o fatorial foi calculado com sucesso.

    19. 11 MultiView, View e Image
    ------------------------------

        . Multiview é um simplificador de exibição de visões, por exemplo, formulários com a lógica
            de "Wizard" "Next -> Next -> ..."

        . Para mais detalhes deste componenete acesse:

            https://www.dotnetfunda.com/tutorials/controls/multiview.aspx

        . Clique sobre o nô do projeto, escolha a opção "Adicionar/ Formulário da Web".

        . Informe o nome do formulário "wfCursos".

        . Arraste o componente "MultiView" para dentro da "Div" do formulário.

        . Arraste três componentes "View" para dentro do componente "MultView", um abaixo do outro:

            . O componente "View" só funcionará dentro do componente "MultView".

        . Clique no nô principal do projeto, clique na opção "New/Folder" e dê o nome de "imagens"        

            . Importe as imagens do projeto do curso (zip) para dentro da pasta "imagens" do nosso projeto.

        . Arraste dois componentes "ImageButton" para dentro da tag "View1"

        . Altere a propriedade abaixo do componente "image1":

            appearance:   {
                AlternateText: "Do básico ao Multiplayer",
                ImageUrl: "~/imagens/Curso1.jpg"
            },
            Layout: {
                Height: 500px,
                Width: 700px
            }

        . Altere a propriedade abaixo do componente "image2":

            appearance:   {
                ImageUrl: "~/imagens/Curso2.jpg"
            },
            Layout: {
                Height: 500px,
                Width: 700px
            }
        
        . Altere a propriedade abaixo do componente "MultView1":

            Behavior:   {
                ActiveViewIndex: 0
            }

        . Execute o projeto e verifique se o conteúdo da View1 está aparecendo com sucesso

    Aula 20. 12 MultiView, View, Image e ImageButton
    ------------------------------------------------

        . Arraste dois componentes "Label" para dentro da tag "View2".

            . Altere a propriedade do "Label1" como abaixo:

                appearance: {
                    Text:   "Constructor 2 - Do básico ao Multiplayer",
                    Font:   {
                        Bold:   True,
                        Size:   Large
                    }
                }

            . Altere a propriedade do "Label2" como abaixo:

                appearance: {
                    Text:   "O curso tem como objetivo ensinar de maneira prática e dinâmica os conceitos necessários"
                }

        . Arraste dois componentes "Label" para dentro da tag "View3".

            . Altere a propriedade do "Label3" como abaixo:

                appearance: {
                    Text:   "Constructor 2 - Construindo um clone do jogo Timberman",
                    Font:   {
                        Bold:   True,
                        Size:   Large
                    }
                }

            . Altere a propriedade do "Label4" como abaixo:

                appearance: {
                    Text:   "O curso tem como objetivo ensinar de maneira prática e dinâmica os conceitos necessários"
                }

        . Altere a propriedade abaixo do componente "MultView1":

            Behavior:   {
                ActiveViewIndex: 1
            }

        . Execute o projeto e verifique se o conteúdo da View2 se está aparecendo com sucesso

        . Modifique as labels "Label2" e "Label4" para a tag "<p>" no código HTML.

        . Acesse os eventos do "ImageButton1" e crie o método abaixo:

            ... 
            protected void ImageButton1_Click( object sender, ImageClickEventArgs e)
            {
                MultiView1.ActiveViewIndex = 1;
            }
            ...

        . Acesse os eventos do "ImageButton2" e crie o método abaixo:

            ... 
            protected void ImageButton1_Click( object sender, ImageClickEventArgs e)
            {
                MultiView1.ActiveViewIndex = 2;
            }
            ...

    Aula 21. 13 HiperLink e LinkButton
    ----------------------------------

        . Para mais detalhes deste componenete acesse:

            https://www.dotnetfunda.com/tutorials/controls/hyperlink.aspx
            https://www.dotnetfunda.com/tutorials/controls/linkbutton.aspx

        . Arraste dois componentes "Hyperlink" para a "View2", abaixo das Labels.

        . No componente "Hyperlink1" altere as propriedades como abaixo:

            appearance: {
                Text: "Compre o curso Construct 2 - Do básico ao Multiplayer"
            },
            Navigation: {
                NavigationUrl: "https://www.udemy.com",
                Target: "_blank"
            }

        . No componente "Hyperlink2" altere as propriedades como abaixo:

            appearance: {
                Text: "Visite o site dfilitto.com.br"
            },
            Navigation: {
                NavigationUrl: "https://www.dfilitto.com.br",
                Target: "_blank"
            }

        . Arraste dois componentes "Hyperlink" para a "View3", abaixo das Labels.

        . No componente "Hyperlink3" altere as propriedades como abaixo:

            appearance: {
                Text: "Compre o curso Construct 2 - Do básico ao Multiplayer"
            },
            Navigation: {
                NavigationUrl: "https://www.udemy.com",
                Target: "_blank"
            }

        . No componente "Hyperlink4" altere as propriedades como abaixo:

            appearance: {
                Text: "Visite o site dfilitto.com.br"
            },
            Navigation: {
                NavigationUrl: "https://www.dfilitto.com.br",
                Target: "_blank"
            }

        . Execute o projeto e verifique se os links estão funcionando.

        . Arraste o componente "LinkButton" para a View2, abaixo do "Hyperlink2"

        . Altere as propriedades abaixo do "LinkButton1":

            Text: "Voltar"

        . Acesse a caixa de eventos e crie o evento "LinkButton1_Click"

            ...
            protected void LinkButton1_Click( object sender, EventArgs e )
            {
                MultView1.ActiveViewIndex = 0;
            }
            ...

        . Arraste o componente "LinkButton" para a View3, abaixo do "Hyperlink2"

        . Altere as propriedades abaixo do "LinkButton2":

            Text: "Voltar"

        . Acesse a caixa de eventos e crie o evento "LinkButton2_Click"

            ...
            protected void LinkButton2_Click( object sender, EventArgs e )
            {
                MultView1.ActiveViewIndex = 0;
            }
            ...
            

    Aula 22. 14 AdRotator
    ---------------------

        . Objetivo deste componente é mostrar propaganda. Para mais detalhes acesse o link abaixo:

            https://www.dotnetfunda.com/tutorials/controls/adrotator.aspx        

        . Acesse a página "wfCursos".

        . Arraste o componente "Adrotator" para a tela acima do componente "MultView1"

        . Para definir a fonte das URLs de propagandas podemos:

            . Clicar na seta do componente desenhado na tela e fornecer as propriedades necessárias. Acabando por 
                criar o conteúdo abaixo na página.

                <asp:AdRotator ID="AdRotator2" runat="Server" AdvertisementFile="~/tutorials/controls/controldata/adRotator.xml"
                    ImageUrlField="ImageUrl" NavigateUrlField="NavigateUrl" AlternateTextField="AlternateText"
                    BorderWidth="1" BorderColor="blue" />         
                    
                    // Advertisement File
                    <Advertisements>
                    <Ad>
                        <ImageUrl>~/images/samples/DotNetLogo.gif</ImageUrl>
                        <NavigateUrl>~/tutorials/controls/listbox.aspx</NavigateUrl>
                        <AlternateText>Go to ListBox tutorials</AlternateText>
                        <Impression>30</Impression>
                    </Ad>
                    <Ad>
                        <ImageUrl>~/images/samples/NewAdvance.gif</ImageUrl>
                        <NavigateUrl>~/tutorials/controls/button.aspx</NavigateUrl>
                        <AlternateText>Go to Button tutorials</AlternateText>
                        <Impression>15</Impression>
                    </Ad>
                    <Ad>
                        <ImageUrl>~/images/samples/DotNetFunda3.gif</ImageUrl>
                        <NavigateUrl>~/tutorials/controls/label.aspx</NavigateUrl>
                        <AlternateText>Go to Label tutorials</AlternateText>
                        <Impression>15</Impression>
                    </Ad>
                    <Ad>
                        <ImageUrl>~/images/samples/DotNetFunda2.gif</ImageUrl>
                        <NavigateUrl>~/tutorials/controls/calendar.aspx</NavigateUrl>
                        <AlternateText>Go to Calendar control tutorials</AlternateText>
                        <Impression>40</Impression>
                    </Ad>
                </Advertisements>       

            . Podemos utilizar um arquivo XML com a estrutura abaixo para representar as URL que serão apresentadas
                na página.

                . A estrutura do XML seria:

                    <Advertisements>  
                        <Ad>  
                            <ImageUrl>  
                                URL of image to display for Advertisement #1  
                            </ImageUrl>  

                            <NavigateUrl>  
                                URL of page to link to for Advertisement #1  
                            </NavigateUrl>  

                            <AlternateText>  
                                Text to show as a ToolTip for Advertisement #1  
                            </AlternateText>  

                            <Keyword>  
                                Keyword used to filter for Advertisement #1  
                            </Keyword>  

                            <Impressions>  
                                Relative importance of Advertisement #1  
                            </Impressions>  

                            <CustomInformation>  
                                Custom Data about Advertisement #1  
                            </CustomInformation>  
                        </Ad>  
                    </Advertisements>


                    Element	        Description
                    -------         -----------

                    ImageUrl	    The absolute or relative URL to an image file (optional).

                    NavigateUrl	    The URL of a page to link to if the user clicks the ad (optional). Note: If this element 
                                    is not set, the HRef property is not rendered on the anchor tag.

                    Height	        The height of the image, in pixels (optional).

                    Width	        The width of the image, in pixels (optional).

                    AlternateText	The text display in place of the image when the image specified by the ImageUrl property 
                                    is not available (optional).

                                    In some browsers, this text also appears as a ToolTip for the advertisement.

                    Keyword	        A category for the advertisement (for example, "computers") that you can filter by (optional).

                    Impressions	    A number that indicates the importance of the ad in the schedule of rotation relative to the 
                                    other ads in the file (optional).

                                    The larger the number, the more often the ad is displayed. The total of all <Impressions> values 
                                    in the XML file cannot exceed 2,047,999,999. If it does, the AdRotator control throws a run-time 
                                    exception.

                . Exemplo:

                    <Advertisements>  
                        <Ad>  
                            <ImageUrl>~/Images/image1.jpg</ImageUrl>  
                            <height>60</height>  
                            <width>190</width>  
                            <NavigateUrl>http://www.microsoft.com</NavigateUrl>  
                            <AlternateText>Microsoft Main Site</AlternateText>  
                            <Impressions>80</Impressions>  
                            <Keyword>Topic1</Keyword>  
                        </Ad>  
                        <Ad>  
                            <ImageUrl>~/Images/image2.jpg</ImageUrl>  
                            <height>90</height>  
                            <width>90</width>  
                            <NavigateUrl>http://www.wingtiptoys.com</NavigateUrl>  
                            <AlternateText>Wingtip Toys</AlternateText>  
                            <Impressions>80</Impressions>  
                            <Keyword>Topic2</Keyword>  
                        </Ad>  
                    </Advertisements>

        . Clique com o botão direito sobre o nô do projeto, escolha a opção "Add/XML File" e dê o nome de "Propaganda".

        . Acesse o XML criado e coloque o conteúdo abaixo nele:

            <?xml version="1.0" encoding="utf-8" ?>
                <Advertisements>
                <Ad>
                    <ImageUrl>~/imagens/1.jpg</ImageUrl>
                    <NavigateUrl>http://www.dfilitto.com.br</NavigateUrl>
                    <AlternateText>dfilitto</AlternateText>
                    <Impressions>90</Impressions>
                </Ad>
                <Ad>
                    <ImageUrl>~/imagens/2.jpg</ImageUrl>
                    <NavigateUrl>http://makeindiegames.com.br</NavigateUrl>
                    <AlternateText>make indie games</AlternateText>
                    <Impressions>10</Impressions>
                </Ad>
            </Advertisements>

        . Altere as propriedades do componente "AdRotator".

            Behavior:   {
                AdvertisementFile: "Propaganda",
                Target: _blank
            }        

        . Execute o projeto e verifique se o componente "AdRotator" está funcionando.


    Aula 23. 15 Literal
    -------------------

        . O componente "Literal" serve para renderizar o seu contéudo, por exemplo:

        . Insira o conteúdo abaixo na página:

            <asp:Literal    ID="LiteralText" 
                            runat="server" 
                            Text="This is example of Literal">
            </asp:Literal> 

        . Execute o projeto e verifique se na construção da página apareceu o texto:

            <div>  
                This is example of Literal  
            </div>

        . Podemos deixar a construção dinâmica, por exemplo:

            . Suponha que temos a página abaixo:

                <%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %>  
                <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
                
                <html xmlns="http://www.w3.org/1999/xhtml">  
                <head runat="server">  
                    <title>Untitled Page</title>  
                </head>  
                <body>  
                    <form id="form1" runat="server">  
                    <div>  
                        <asp:Literal ID="Literal1" runat="server" />  
                        <asp:Literal ID="Literal2" runat="server" />  
                        <asp:Literal ID="Literal3" runat="server" />  
                    </div>  
                    </form>  
                </body>  
                </html>

            . Com o código ".aspx.cs" abaixo:

                using System;  
                using System.Configuration;  
                using System.Data;  
                using System.Linq;  
                using System.Web;  
                using System.Web.Security;  
                using System.Web.UI;  
                using System.Web.UI.HtmlControls;  
                using System.Web.UI.WebControls;  
                using System.Web.UI.WebControls.WebParts;  
                using System.Xml.Linq;  
                
                public partial class _Default : System.Web.UI.Page  
                {  
                    protected void Page_Load(object sender, EventArgs e)  
                    {  
                        Literal1.Mode = LiteralMode.Encode;  
                        Literal1.Mode = LiteralMode.PassThrough;  
                        Literal1.Mode = LiteralMode.Transform;  
                
                        Literal1.Text = @"<font size=4 color=red>Literal1 with Encode property example</font><script>alert(""Literal with Encode property"");</script></br></br>";
                        Literal2.Text = @"<font size=4 color=green>Literal2 with PassThrough property example</font><script>alert(""Literal with PassThrough property"");</script></br></br>";
                        Literal3.Text = @"<font size=4 color=blue>Literal3 with Encode Transform example</font><script>alert(""Literal with Transform property"");</script></br></br>";   
                    }  
                }

    Aula 24. 16 ImageMap
    --------------------

        . Clique sobre o nô do projeto, escolha a opção "Adicionar/ Formulário da Web".

        . Informe o nome do formulário "wfSiteParceiros".

        . Arraste o componente "ImageMap" para dentro do formulário recém criado.

        . Altere a propriedade abaixo do componente "ImageMap":

            appearance:   {
                ImageUrl: "~/imagens/exemplopropagandas.jpg",
            },
            Behavior:   {
                HotSpots:   {
                    RectangleHotSpot: {
                        appearance: {
                            Bottom: 350,
                            Left:   0,
                            Right:  400,
                            Top:    0
                        },
                        Behavior: {
                            AlternateText: "Site Make Indie Games",
                            NavigateUrl: "http://www.makeindiegames.com.br",
                            Targe: "_blank"
                        }
                    },
                    RectangleHotSpot:   {
                        appearance: {
                            Bottom: 0,
                            Left:   450,
                            Right:  800,
                            Top:    300
                        },
                        Behavior: {
                            AlternateText: "Site Make Indie Games",
                            NavigateUrl: "http://www.vivapontal.com.br",
                            Targe: "_blank"
                        }
                    }
                }
            }

        . Execute o projeto e verifique se a imagem acima está funcionando como um link


    Aula 25. 17 Utilizando JavaScript
    ---------------------------------

        . Clique sobre o nô do projeto, escolha a opção "Adicionar/ Formulário da Web".

        . Informe o nome do formulário "wfBasicoJavascript".

        . Arraste o componente "Image" para dentro do formulário recém criado e altere as propriedades abaixo:

            appearance: {
                imageUrl: "One-Piece-Chibi-PNG-Image.png"
            }

        . Acesse o código da página "wfBasicoJavascript.aspx" e altere a tag gerada pelo design como abaixo:

            ...
            <asp:Image  ID="Image1" 
                        runat="server" 
                        ImageUrl="~/imagens/One-Piece-Chibi-PNG-Image.png" 
                        onMouseOver="alert('Alô Mundo!!!')"/>     <!-- Linha inserida -->
            ...

        . Execute o projeto e verifique se ao passar com o mouse sobre a imagem vem a mensagem "Alô Mundo!!!"

        . Insira a função javascript como abaixo na página:

            ...
            <head runat="server">
                <title></title>

                <!-- função inserida -->

                <script type="text/javascript">
                    function ExibeMensagem() {
                        alert('Alô Mundo!!!!!');
                    }
                </script>

                <!-- Fim da inserção -->

            </head>
            ...

        . Altere o evento "onMouseOver" como abaixo:

            ...
            <asp:Image  ID="Image1" 
                        runat="server" 
                        ImageUrl="~/imagens/One-Piece-Chibi-PNG-Image.png" 
                        onMouseOver="ExibeMensagem()"/>     <!-- Linha inserida -->
            ...

        . Execute o projeto e verifique se ao passar com o mouse sobre a imagem vem a mensagem "Alô Mundo!!!"

        . Arraste o componente "Button" abaixo do "Image1".

        . Acesse o código da página "wfBasicoJavascript.aspx" e faça a alteração abaixo na tag do componente "Button"

            ...
            <asp:Button ID="Button1" runat="server" Text="Clique no Botão" Width="628px" />
            ...

        . Acesse o código da página "wfBasicoJavascript.aspx.cs" e implemente as linhas abaixo:

            ...
            protected void Page_Load(object sender, EventArgs e)
            {
                Button1.Attributes.Add("onClick", "ExibeMensagem()");
            }
            ...

        . Execute o projeto e verifique se ao clicar no button vem a mensagem "Alô mUndo!!!".

    Aula 26. 18 Utilizando JavaScript
    ---------------------------------

        . Comente a linha abaixo para não conflitar com o próximo item:

            ...
            protected void Page_Load(object sender, EventArgs e)
            {
                // Button1.Attributes.Add("onClick", "ExibeMensagem()");
            }
            ...

        . Acesse os eventos do "Button1" e altere o metodo "Behavior.onClientClick" com o conteúdo abaixo:

            Behavior.onClientClick: "ExibeMensagem()"

        . Execute o projeto e verifique se ao clicar no button vem a mensagem "Alô mUndo!!!".


    Aula 27. 19 Utilizando JavaScript - Exercício
    ---------------------------------------------

        . Clique sobre o nô do projeto, escolha a opção "Adicionar/ Formulário da Web".

        . Informe o nome do formulário "wfAlteraTamanhoFonte".

        . Acesse o código fonte da página "wfAlteraTamanhoFonte.aspx" e faça as alterações abaixo:

            <%@ Page Language="C#" 
                        AutoEventWireup="true" 
                        CodeBehind="wfAlteraTamanhoFonte.aspx.cs" 
                        Inherits="waConhecendoOsComponetes.wfAlteraTamanhoFonte" %>

            <!DOCTYPE html>

            <html xmlns="http://www.w3.org/1999/xhtml">
            <head runat="server">
                <title></title>

                <!-- Bloco inserido -->

                <script type="text/javascript">
                    var tam = 12;
                    function IncText() {
                        tam = tam + 1;
                        document.getElementById("p1").style.fontSize = tam + "px";
                        document.getElementById("p2").style.fontSize = tam + "px";
                    }
                    function DecText() {
                        tam = tam - 1;
                        document.getElementById("p1").style.fontSize = tam + "px";
                        document.getElementById("p2").style.fontSize = tam + "px";
                    }
                </script>

                <!-- Fim da inserção -->

            </head>
            <body>
                <form id="form1" runat="server">
                    <div>
                        <asp:HyperLink ID="HyperLink1" runat="server" onClick="IncText()">++++++++</asp:HyperLink>
                        <br />
                        <asp:HyperLink ID="HyperLink2" runat="server" onClick="DecText()">--------</asp:HyperLink>
                        <br />
                    </div>

                    <!-- Bloco inserido -->

                    <p id="p1"> Exemplo de como alterar o tamanho da fonte de um páragrafo</p>
                    <p id="p2">Visite o nosso site <a href="http://www.dfilitto.com.br">dfilitto</a></p>

                    <!-- Fim da inserção -->
                </form>
                <p>&nbsp;</p>
            </body>
            </html>

        . Arraste dois "Hyperlink" para o topo da página, acesse a página "wfAlteraTamanhoFonte.aspx" e faça as alterações abaixo.

                ...
                <form id="form1" runat="server">
                    <div>
                        <asp:HyperLink ID="HyperLink1" runat="server" onClick="IncText()">++++++++</asp:HyperLink>  <!-- Linha alterada -->
                        <br />                                                                                      <!-- Linha inserida -->
                        <asp:HyperLink ID="HyperLink2" runat="server" onClick="DecText()">--------</asp:HyperLink>  <!-- Linha alterada -->
                        <br />                                                                                      <!-- Linha inserida -->
                    </div>
                    ...
                </form>
                ...

            . Importante: Foi utilizado os componentes "Hyperlink" porque não fazem "Post" na página, diferente do que ocorre no "Button"

        . Execute o projeto e verifique se ao clicar nos "Hyperlink" é alterado o tamanho da fonte.


    Aula 28. 20 Criando a página inicial do nosso site
    --------------------------------------------------    

        . Clique sobre o nô do projeto, escolha a opção "Adicionar/ Formulário da Web".

        . Informe o nome do formulário "index".

        . Arraste da barra de ferramentas o componente "HTML.Table" para dentro do formulário criado na área de desenho.

        . Arraste o três componentes "Hyperlink" para dentro do componente "Table", um para cada celula da primeira linha.

            . Altere as propriedades abaixo em cada "Hyperlink":

                Hyperlink1: {
                    Apareance.Text:         "Tabuada",
                    Navigation.NavigateUrl: "~/wfTabuada.aspx"                  // Clique nos "..." da caixa de propriedades dessa propriedade 
                },                                                              // e escolha a página "wfTabuada"                
                Hyperlink2: {
                    Apareance.Text:         "Par ou Impar",
                    Navigation.NavigateUrl: "~/wfParOuImparFatorial.aspx"      
                },                                                             
                Hyperlink3: {
                    Apareance.Text:         "Calcula os Dias de Vida",
                    Navigation.NavigateUrl: "~/wfDiasDeVida.aspx"                 
                }

        . Arraste o três componentes "ImageButton" abaixo de cada "Hyperlink" criado no passo anterior.

            . Altere as propriedades abaixo em cada "Image":

                ImageButton1: {
                    Apareance.ImageUrl:         "~/imagens/Curso1.jpg",
                    Layout.Height:              241px,
                    Layout.Width:               429px,
                    Behavior.PostBackUrl:       "~/wfCursos.aspx"
                },
                ImageButton2: {
                    Apareance.ImageUrl:         "~/imagens/Curso2.jpg",
                    Layout.Height:              241px,
                    Layout.Width:               429px,
                    Behavior.PostBackUrl:       "~/wfCursos.aspx"
                },
                ImageButton3: {
                    Apareance.ImageUrl:         "~/imagens/OnePeacePoster.png",
                    Layout.Height:              241px,
                    Layout.Width:               429px
                    Behavior.PostBackUrl:       "~/wfAlteraTamanhoFonte.aspx"
                }
        
        . Execute o projeto e verifique se ao clicar nos "Hyperlink" se está indo para a página configurada.


    Aula 29. UpLoad de arquivo
    --------------------------    

