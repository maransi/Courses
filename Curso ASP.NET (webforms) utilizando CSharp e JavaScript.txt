Curso ASP.NET (webforms) utilizando CSharp e JavaScript
--------------------------------------------------------

https://www.tutorialspoint.com/asp.net/index.htm

Conceitos Fundamentais
======================

Aula 1. Como instalar o Visual Studio
-------------------------------------

    . Acesse o link abaixo, baixe a versão "Community" e execute o programa baixado:

        https://visualstudio.microsoft.com/pt-br/downloads/

    . Escolha as opções abaixo no instalador:

        . Cargas de Trabalho:

            . ASP.NET e desenvolvimento web

            . Desenvolvimento de .NET Multi-Plataforma App Ui

            . Desenvolvimento Desktop com .NET

            . Desenvolvimento com a plataforma universal do Windows

            . Processamento e armazenamento de dados

    . Depois que fizer a instalação do Visual Studio, caso queiramos instalar algum componente que 
        ficou de fora da instalação inicial, basta:
        
        . Acessar o programa "Visual Studio Installer", na opção
            modificar e escolher as opção que ficaram de fora da instalação inicial.

        . Ou, acesse o "Visual Studio", opção "Ferramentas/Obter Ferramentas ou Funcionalidades"

    . Ao acessar o Visual Studio escolha as opções:

        . Abrir um projeto ou solução

        . Ou, Criar um projeto

Aula 4. O que é AXML?
---------------------

    . O XAML (Extensible Markup Language) é uma linguagem baseada em XML desenvolvida pela Microsoft para 
        criar interfaces de usuários de forma simples e rápida.

    . Os arquivos AXML possuem a extensão .xaml e geralmente são criados por meio de uma ferramenta visual,  
        tal como o Visual Studio.  O AXML é utilizado juntamente com outras linguagens a fim de criar 
        interfaces tanto para aplicações compiladas quanto para aplicações interpretadas.

    . Seu uso permite criar aplicações que separam totalmente a lógica de programação da criação da 
        interface, isto é, as ações que as aplicações irão executar são implementadas em um arquivo 
        separado do arquivo utilizado para definir a interface da aplicação.


Módulo 1 - Conhecendo os Componentes 
====================================

    Aula 5. Estrutura básica de uma página ASP.NET
    ----------------------------------------------

        . Para trabalhar com ASP.NET WebForm é necessário instalar alguns componentes no IDE:

            . Acesse o vídeo abaixo para mais detalhes:

                https://www.youtube.com/watch?v=ANfMct1qFcs 

            . Acesse a opção de menu "Ferramentas/Obter Ferramentas ou Funcionalidades"

            . Acesse o item "Componentes Individuais"

            . No item ".NET" selecione todos os itens deste grupo

            . IMPORTANTE: os passos acima deste item é necessário para habilitar a criação de projeto "Webforms"

        . Acesse o Visual Studio e escolha a opção "Criar um Projeto"

        . Na janela que se abre de "Criar Novo Projeto".

        . Na janela que se abre "Configurar se novo projeto" informe as configurações abaixo:

            Nome do Projeto:    [Nome do projeto, Exemplo: AloMundo]
            Local:              [Pasta para gravar o projeto]
            Nome da Solução:    [Nome da Solução, pode ser o mesmo nome do projeto, Exemplo: AloMundo]
            
            Colocar a solução 
            e o projeto no 
            mesmo diretório:    True

            Estrutura:          ".NET Framework 4.6.2" 

        . Na tela que se abre "Informações Adicionais" informe as configurações abaixo:

            Estrutura:              .NET Core 5.0
            Configurar para HTTPS:  True
            Habilitar Docker:       False

        . Na tela que se abre "Criar um Aplicativo Web ASP.NET" escolha o item "Vazio"

        . Configure o Navegador Padrão em:

            . Acesse na barra de ferramentas "IIS Express / Navegador da Web / Brave, Chrome, ...

        . Na estrutura do projeto, no item com o nome do projeto, clique com o direito e escolha a opção:

            . Adicionar / Formulário da Web

            . Informe o nome do formulário:

                "AloMundo"

            . A página criada será assim:

                <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="AloMundo.aspx.cs" Inherits="AloMundo2.AloMundo" %>

                <!DOCTYPE html>

                <html xmlns="http://www.w3.org/1999/xhtml">
                <head runat="server">
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                    <title></title>
                </head>
                <body>
                    <form id="form1" runat="server">
                        <div>
                        </div>
                    </form>
                </body>
                </html>

            . Acesse a aba "Design" no rodapé do formulário para ir ao modo de desenho do formulário.

            . Caso queira apresentar tanto o modo código da página e design juntos, acesse no rodapé a aba "Dividir".

            . Acesse a opção de menu "Exibir/Caixa de Ferramentas".

                . Caixa de Ferramentas é o local que disponibiliza os componentes (Input, ListBox, etc.) para incluir no formulário.

            . No modo "Design" localize o componente "TextBox", dê um duplo clique e verifique se este componente foi para o formulário.

                . Clique no componente e pressione "F4" para apresentar as propriedades do componente.

                    . Altere a seguinte propriedade abaixo:

                        ID:                 "txtMsg"

            . Localize o componente "Button", dê um duplo clique.

                . Acesse as propriedades deste componente e altere a propriedade abaixo:

                    ID:                     "btnExecutar"
                    Text:                   "Executar"

            . Localize o componente "Label", acrescente ele no formulário:

                . Altere as propriedades abaixo:

                    Text:                   "Titulo do Texto"
                    ID:                     "lblTexto"

            . Após a inserção desses componentes nossa página ficará com seguinte conteúdo:

                <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="AloMundo.aspx.cs" Inherits="AloMundo2.AloMundo" %>

                <!DOCTYPE html>

                <html xmlns="http://www.w3.org/1999/xhtml">
                <head runat="server">
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                    <title></title>
                </head>
                <body>
                    <form id="form1" runat="server">
                        <div>
                            <p>
                                <asp:Label ID="lblTexto" runat="server" Text="Título do Texto"></asp:Label><br />
                                <asp:TextBox ID="txtMsg" runat="server" Width="369px"></asp:TextBox><br />
                            </p>
                            <asp:Button ID="btnExecutar" runat="server" Text="Executar" OnClick="btnExecutar_Click" />
                        </div>
                    </form>
                </body>
                </html>

                . Está pagina será identificada no projeto pelo seu nome + ".aspx" (AloMundo.aspx).

            . Dê um duplo clique no componente "btnExecutar" e altere o evento dele como abaixo:

                ...
                protected void btnExecutar_Click( object sender, EventArgs e)   
                {
                    if (txtMsg.Text == "")
                    {
                        lblTexto.Text = "Alô Mundo - Aula '";
                    }
                    else
                    {
                        lblTexto.Text = txtMsg.Text;
                    }
                }

            . Execute a solução com o botão "F5"

        . Todos os controles ASP.NET tem seus eventos implementados na classe ".cs" da página. O evento clique
            do botão "btnExecutar" foi implementado na classe "AloMundo.aspx.cs".

            . Neste caso os objetos ".aspx" e ".aspx.cs" são inteiramente dependentes. Exemplo:

                AloMundo.aspx       --->        AloMundo.aspx.cs

            . A tag "<asp:...>" informa ao ASP.NET que o objeto deverá postar para o servidor e encontrar o seu evento 
                na classe "aspx.cs". Caso não for colocado esta tag, colocando somente as tags de HTML, o ambiente não 
                irá no servidor procurar as ações do evento.

            . Exemplo:

                <asp:Button ID="btnExecutar" runat="server" Text="Executar" OnClick="btnExecutar_Click" />
                                                    |
                                                    V
                protected void btnExecutar_Click( object sender, EventArgs e)   

        . Os eventos mais comuns nos controles são:

            Event	                 Attribute Server	    Controls
            -----                   ----------------        --------

            Click	                OnClick	                Button, image button, link button, image map
            Command	                OnCommand	            Button, image button, link button
            TextChanged	            OnTextChanged	        Text box
            SelectedIndexChanged	OnSelectedIndexChanged	Drop-down list, list box, radio button list, check box list.
            CheckedChanged	        OnCheckedChanged	    Check box, radio button

        . Os eventos padrões dos principais controles:

            Control	            Default Event
            -------             -------------
            AdRotator	        AdCreated
            BulletedList	    Click
            Button	            Click
            Calender	        SelectionChanged
            CheckBox	        CheckedChanged
            CheckBoxList	    SelectedIndexChanged
            DataGrid	        SelectedIndexChanged
            DataList	        SelectedIndexChanged
            DropDownList	    SelectedIndexChanged
            HyperLink	        Click
            ImageButton	        Click
            ImageMap	        Click
            LinkButton	        Click
            ListBox	            SelectedIndexChanged
            Menu	            MenuItemClick
            RadioButton	        CheckedChanged
            RadioButtonList	    SelectedIndexChanged

        . Os principais eventos de uma página ".aspx":

            DataBinding - It is raised when a control binds to a data source.

            Disposed - It is raised when the page or the control is released.

            Error - It is a page event, occurs when an unhandled exception is thrown.

            Init - It is raised when the page or the control is initialized.

            Load - It is raised when the page or a control is loaded.

            PreRender - It is raised when the page or the control is to be rendered.

            Unload - It is raised when the page or control is unloaded from memory.


    Aula 6. Como criar um projeto no Visual Studio 2019
    ---------------------------------------------------

        . Abra o Visual Studio 2022

        . Clique no botão "Criar um projeto"

        . Na tela "Criar um novo projeto" escolha a opção "Aplicativo Web ASP.NET (.NET Framework)

        . Na tela "Configurar seu novo projeto" informe:

            Nome do Projeto:                "Nome do projeto"
            Local:                          "Pasta para criar o projeto"
            Nome da Solução:                "Container de projetos"
            Colocar a solução e projeto no
            mesmo diretório:                True
            Estrutura:                      ".NET Framework 4.6" a ".NET Framework 4.8.x"
        
            . Clique no botão "Criar"

        . Na tela "Criar um Aplicativo Web ASP.NET" podemos escolher:

            . Tipo do projeto:

                Vazio:                          True        (Para o treinamento é true)
                Web Forms:                      False
                MVC:                            False
                API Web:                        False
                Aplicativo de página única:     False

            . Autenticação:                     False

            . Adicionar as pastas e as principais referências:

                Formulários da Web:             False
                MVC:                            False
                API Web:                        False

            . Avançado

                Configurar para HTTPS:          false   (Para o treinamento)
                Suporte do Docker:              False
                Além disso, crie um projeto 
                para testes de unidade:         Flase

            . Clique no botão "Criar"

        . No projeto criado clique na aba lateral "Gerenciador de Soluções"

        . Clique com o botão direito sobre o nó com o nome do projeto e escolha a opção "Adicionar/Formulário Web"

        . Na tela que abriu informe o nome do formulário:

            "Default"

        . Acesse a página criada:

            . Acesse a aba "Origem", no rodapé da página, onde encontra-se o código HTML dela.

            . Acesse a aba "Design", no rodapé, onde podemos fazer o desenho da página acessando a "Caixa de Ferramentas" arrastando
                os componentes para dentro do formulário.

            . Acesse a aba "Dividir", no rodapé, onde podemos visualizar tanto o código, quanto o desenho, da página.

            . Detalhe: 

                . No modo "Design" podemos clicar no layout da página e navegar por ela com as setas. Se dermos "Enter" será 
                    inserido a tag HTML "<br/>" no código.

            . Crie no formulário os componentes:

                Label
                TextInput
                Button

            . Para criar um evento basta selecionar o objeto, acessar a aba de propriedades e clicar no botão "Evento" com o simbolo de trovão.

                . No método "Click" do componente "Button" insira o código abaixo:

                    Label1.Text = "Alô " + TextBox1.Text;
        
            . Execute o projeto acionando o botão "ISS Express"

            . Para utilizar o recurso de carga automática nos casos de alteração do fonte, sem a necessidade de para o projeto e inicia-lo novamente,
                acesse o botão "Recarga Dinâmica" com o simbolo do "Fogo".


    Aula 7.01 Conhecendo os componentes Button, TextBox e DropDownList
    ------------------------------------------------------------------

        . Adicione um formulário com o nome "wfComponentes".

        . Escolha na "Caixa de Ferramentas" o componente "HTML/Table" e arraste ele para dentro do formulário.

            . Na primeira linha do html/table configure as três colunas, sendo:

                Coluna 1:       {
                    Caption:        "Site",
                    Line:           {
                        TextInput: {
                            Diversos.ID:    txtSite    
                        }
                    }
                },
                Coluna 2:       {
                    Caption:        "Endereço",
                    Line:           {
                        TextInput: {
                            Diversos.ID:    txtEndereco  
                        }
                    }
                },
                Coluna 3:       {
                    Caption:        "Opções",
                    Line:          {
                        Button: {
                            Diversos.ID:    "btnInserir",
                            Font.Text:      "Inserir Site"
                        }
                    }
                }

            . Na segunda linha:

                Coluna 1:       {
                    Line:           {
                        DropDownList: {
                            Diversos.ID:    ddlSite    
                        }
                    }
                },

                . Arraste o componente "DropDownList" para dentro da coluna:
                
                    . Clique na seta ao lado do "DropDownList".

                    . Clique no link "Editar Itens..." após arrastá-lo.
                    
                    . Na tela que se abre acione o botão "Adicionar" e complete as propriedades: "Text" e "Valor" para cada item 
                        incluido. Inclua uns dois, ou três itens.

                . No código da página é possível implementar novos itens ao "DropDownList":

                    <asp:DropDownList ...>
                        <asp:ListItem>Item 1</asp:ListItem>
                        <asp:ListItem>Item 2</asp:ListItem>
                        ...                     <!-- Novos itens -->
                    </asp:DropDownList>

                . Clique na seta ao lado do "DropDownList", acesse a propriedade "Valor" e para cada item coloque um valor (1,2,...).

            . No botão do formulário, crie o evento "btnInserir_Click" com o código abaixo:

                ddlSite.Items.Add( txtSite.Text );

            . Execute o projeto e teste a inserção de um novo item no "DropDownList"

            . Altere o código do evento "btnInserir_Click" pelo código abaixo:

                ListItem item = new ListItem( txtSite.Text, ddlSite.Items.Count.ToString());

                ddlSite.Add( item );

                txtSite.Text = "";

            . Execute o projeto e teste a inserção de um novo item no "DropDownList"


    Aula 8.02 Conhecendo os componentes DropDownList e ListBox
    ----------------------------------------------------------


            
