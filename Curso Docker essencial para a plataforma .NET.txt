Curso Dicker essencial para a plataforma .NET


Aula 5. Instalando o Docker
---------------------------

. No caso do windows, acesse a URL abaixo e baixe o instalador:

    https://store.docker.com/editions/community/docker-ce-desktop-windows

. Utilizar a versão Community Edition (CE)

. No caso do Linux execute os comandos abaixo no prompt no terminal:

    . A URL abaixo tem os passos atualizado para instalação do Docker:

        https://docs.docker.com/engine/install/ubuntu/

	. Instalação Atualizada

        sudo apt-get update
        sudo apt-get install \
            ca-certificates \
            curl \
            gnupg \
            lsb-release

        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io
        sudo docker --version

        sudo groupadd docker
        sudo gpasswd -a <usuario> docker
        sudo chown "$USER":"$USER" /var/run/docker.sock -R
        sudo service docker restart

        docker --version

    . Instalação simplificada

		sudo apt install docker.io
		sudo systemctl enable --now docker
		sudo usermod -aG docker marco
		sudo adduser $USER docker
		sudo chown "$USER":"$USER" /var/run/docker.sock -R
		docker --version


    . Instalando o MySQL

        # Criando container com nome o banco de dados MySQL
        docker container run -e MYSQL_ROOT_PASSWORD=root --name algamoney -d mysql:5.7 				
        docker start algamoney

        docker ps -a
        docker exec -it algamoney bash	
        mysql -u root -p

        docker stop algamoney

    . Instalando o SQL Server

        https://docs.microsoft.com/pt-br/sql/linux/quickstart-install-connect-docker?view=sql-server-ver15&pivots=cs1-bash
        https://docs.microsoft.com/pt-br/sql/linux/sql-server-linux-setup-tools?view=sql-server-ver15#ubuntu


        docker container run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Joao3.16"    -p 1433:1433 --name sql1 --hostname sql1    -d mcr.microsoft.com/mssql/server:2019-latest
        docker container ps -a
        docker container exec -t sql1 cat /var/opt/mssql/log/errorlog | grep connection

        # Testar no linux, não funcionou no windows
        docker container exec -it sql1 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA  -P "$(read -sp "Enter current SA password: "; echo "${REPLY}")"  -Q "ALTER LOGIN SA WITH PASSWORD=\"$(read -sp "Enter new SA password: "; echo "${REPLY}")\""
        docker exec -it sql1 "bash"
        hostname -I
        ip a
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get update 
        sudo apt-get install mssql-tools unixodbc-dev
        sudo apt-get update 
        sudo apt-get install mssql-tools
        echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
        echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
        source ~/.bashrc
        hostname -I
        sqlcmd -S 192.168.0.82,1433 -U SA -P "Joao3.16"





Aula 6. Instalando o .NET Core SDK
----------------------------------

    . Instalçao Atualizada:

        . URL com informações para realizar a instalação.

            https://docs.microsoft.com/pt-br/dotnet/core/install/linux-ubuntu

            . IMPORTANTE: Acesse a instalação da distribuição e versão especifica do linux que estamos utilizando para 
                            proceder os comandos adequadamente.

                            A instalação abaixo está para o Ubuntu 20.04

        # Instalação do SDK
        wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb

        sudo dpkg --purge packages-microsoft-prod && sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update

        sudo apt-get install -y gpg
        wget -O - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o microsoft.asc.gpg
        sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
        wget https://packages.microsoft.com/config/ubuntu/{os-version}/prod.list
        sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
        sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
        sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list

        sudo apt-get update; \
        sudo apt-get install -y apt-transport-https && \
        sudo apt-get update && \
        sudo apt-get install -y dotnet-sdk-6.0

        sudo apt-get install -y apt-transport-https && \
        sudo apt-get update && \
        sudo apt-get install -y aspnetcore-runtime-6.0

        sudo apt-get install -y dotnet-runtime-6.0


    . Instalação simplificada        

        . Acesse o link abaixo para baixar o .NET Core 3.1

            https://dotnet.microsoft.com/download

        . Acesse o download "All .NET Core downloads" e baixe a versão 3.1

        . Acesse o link "Package manager instructions" 

        . Localize a versão do Ubuntu que está sendo utilizado, copie e execute os comandos no 
            terminal:

            wget https://packages.microsoft.com/config/ubuntu/20.10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update;   sudo apt-get install -y apt-transport-https &&   sudo apt-get update &&   sudo apt-get install -y dotnet-sdk-5.0
            sudo apt-get update;   sudo apt-get install -y apt-transport-https &&   sudo apt-get update &&   sudo apt-get install -y aspnetcore-runtime-5.0

    . Para testar a instalação execute os comandos abaixo:

        dotnet --version
        dotnet --help
        dotnet --list
        dotnet --list-runtimes
        dotnet --list-sdks


Aula 7. Instalando o VS Code
----------------------------

    Instalação das extensões do VSCode

            C# 
            C# Extensions
            C# XML Documentation Comments
            vscode-icons (Opcional)
            Docker

        . Atalhos:

            Ctrl + K + D ou Shit + Alt + F:             Identa todo o seu código automaticamente;
            Ctrl + K + C:                               comenta um bloco de linhas;
            Ctrl + K + U:                               descomenta um bloco de linhas;
            Alt + Left Arrow:                           durante a programação, volta um método que você estava navegando;
            Alt + Right Arrow:                          durante a programação, avança um método que você estava navegando;
            Ctrl + .:                                   implementa o método/classe inexistente que você acabou de escrever;
            Ctrl + M + O:                               esconde todas as regions da classe atual;
            Ctrl + Shift + B:                           compila todos os projetos;
            F5:                                         manda depurar um projeto;
            Ctrl + F5:                                  manda executar um projeto;
            F10:                                        durante a depuração, avança uma linha;
            F11:                                        durante a depuração, avança uma linha entrando nos detalhes da mesma;


    Configurar Visual Studio Code para .NETCore

        . Acesse File / Preferences / Settings

        . Digite C#

        . Acesse "C# Configuration / CSharp Format Enabled" e habilite a configuração

        . Digite "Format on save" e habilite a configuração

        . Digite "Final" e habilite a configuração "Files: Insert final newline" e habilite a configuração


Aula 10. Criando Contêineres - I
--------------------------------

    . Criando um container a partir de uma imagem pronta

        docker container run <imagem>

    . Testando o docker:

        docker container run hello-world
          |       |       |     +-> É a imagem existente usada para criar o container
          |       |       |
          |       |       +-> É a porta de entrada no Docker e realiza 4 operações:
          |       |
          |       |            . Baixa a imagem não localizada localmente: docker image pull
          |       |            . Cria um container: docker container create
          |       |            . Inicializa o container: docker container start
          |       |            . Uso do modo interativo executando um comando: docker container exec
          |       |
          |       |
          |       +-> Indica que o comando irá atuar em um container
          |
          +-> Executor do comando

        . Importante: o "run" executa o container, mas cria sempre um novo container. Faça isso somente uma vez para a imagem desejada.
                        Utilize o comando abaixo "docker container start <nome do container> para executar o container.

    . Exibindo todos os container em processamento no momento:

        docker container ps

    . Exibindo todos os container independente se está, ou não, em processamento

        docker container ps -a

    . Exibindo as imagens

        docker images

Aula 11. Criando Contêineres - II
--------------------------------

    . Baixando uma image

        # Para consultar as imagens localmente
        docker images   

        # Para baixar uma imagem
        docker image pull alpine

        # Se quiser fornecer uma versão especifica da imagem utilize como abaixo
        docker image pull alpine:3.6

        # Para consultar as imagens localmente
        docker images   

        # Executa, cria um container e envia um comando para ser executado no container
        docker container run alpine ls -l

        # Consultando os containeres
        docker container ps -a

        # Executa, cria e permanece dentro do container
        docker container run -it alpine /bin/sh

        # Executa um container existente. Importante: Neste caso deixa o container em execução
        docker container start < 4 primeiras posições do CONTAINER ID, ou todo o código do CONTAINER ID >

        # Executa um comando dentro de um container em execução
        docker container exec < 4 primeiras posições do CONTAINER ID, ou todo o código do CONTAINER ID > ls -l
    
        # Parar o container em execução.
        docker container stop < 4 primeiras posições do CONTAINER ID, ou todo o código do CONTAINER ID >

        # Criando container com nome
        docker container run --name alp3 -it alpine 
        docker container start alp3
        docker ps
        
        # Acessará o container, no prompt de comando do SO.
        docker container attach alp3
        docker ps

        # Elimnando container
        docker container rm <container ID ou container name>


Aula 13. Container - Mapeando pastas
------------------------------------

    # Mapeando a porta, faz a associação da porta externa com a interna do container
    docker container run --name ws1 -p 80:80 nginx
                                        |  |
                                        |  +-> No. da porta de dentro do container
                                        +-> No. da porta externa, da máquina de fora
    . Acesse a url abaixo:

        http://localhost:80


    # Execução em segund plano
    docker container run --name ws2 -p 80:80 -d nginx
                                              |
                                              +-> Informa ao docker para executar em segundo plano


Aula 14. Container - Mapeando pastas
------------------------------------

    # Mapeando pasta da máquina local para dentro do container
    docker container run --name ws3 -p 80:80 -v $(pwd)/html:/usr/share/nginx/html -d nginx
                                                |----------||-------------------|
                                                 pasta local  pasta de dentro do
                                                 da máquina     container

    . Acesse a url abaixo:

        # Dará erro de página não encontrada
        http://localhost:80

    . Crie o arquivo abaixo na pasta ~/html/index.html

        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Document</title>
        </head>
        <body>
            Hello World
        </body>
        </html>


Aula 15. Container Docker com .NET
----------------------------------

    https://hub.docker.com/_/microsoft-dotnet-sdk


    # Para baixar a imagem
    docker pull mcr.microsoft.com/dotnet/sdk        ou      docker pull mcr.microsoft.com/dotnet/sdk:3.1        ou          docker pull mcr.microsoft.com/dotnet/sdk:5.0

    docker images

    docker container ps -a

    # Para baixar a imagem e executar em um container
    docker container run --name demo-dotnet -it mcr.microsoft.com/doentnet/sdk:5.0

    # Dentro do container execute os comandos abaixo
    mkdir workspace-dotnet
    mkdir hello-world
    cd workspace-dotnet/hello-world
    dotnet new console
    dotnet build
    dotnet run
    exit

    # Para acessar o container
    docker container ps 

    docker container start -ia demo-dotnet
    



